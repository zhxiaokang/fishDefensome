setwd('/Users/xzh004/Desktop/research/others/Essa/RASflow')
# load the libraries
if (!require("plotscale")) install.packages('scripts/plotscale_0.1.6.tar.gz', repos = NULL, type="source")
library(yaml)
library(mygene)
library(EnhancedVolcano)
library(RColorBrewer)
library(data.table)
library(plotscale)
# load the config file
yaml.file <- yaml.load_file('configs/config_visualize.yaml')
# extract the information from the yaml file
dea.table <- yaml.file$DEAFILE
deg.table <- yaml.file$DEGFILE
count.path <- yaml.file$COUNTPATH  # the folder where all the normalized count tables are stored
output.path <- yaml.file$OUTPUTPATH
meta.file <- yaml.file$METAFILE
# extract the metadata
meta.data <- read.csv(meta.file, header = TRUE, sep = '\t')
group.all <- meta.data$group
groups <- levels(group.all)
dea.table <- read.csv(dea.table, header = TRUE, row.names = 1)
dea.table <- read.csv(dea.table, header = TRUE, row.names = 1)
deg.table <- read.csv(deg.table, header = TRUE, row.names = 1)
gene.id.dea <- row.names(dea.table)
gene.id.deg <- row.names(deg.table)
gene.symbol.dea <- queryMany(gene.id.dea, scopes = 'ensembl.gene', fields = 'symbol')$symbol
# if can't find a symbol for the id, then keep the id as it is
gene.dea <- gene.symbol.dea
for (i in c(1:length(gene.dea))) {
if (is.na(gene.dea[i])) {
gene.dea[i] <- gene.id.dea[i]
}
}
# volcano plot
fig.volcano <- EnhancedVolcano(dea.table, lab = gene.dea, xlab = bquote(~Log[2]~ "fold change"), x = 'logFC', y = 'FDR', pCutoff = 10e-5,
FCcutoff = 1, xlim = c(-5, 5), ylim = c(0, 10), transcriptPointSize = 1.5, title = 'Volcano plot for DEA', subtitle = NULL)
as.pdf(fig.volcano, width = 8, height = 5, scaled = TRUE, file = paste(output.path, '/volcano_plot.pdf', sep = ''))
# heatmap
## collect all the files
files <- file.path(count.path, paste(groups, "_norm.csv", sep = ''))
norm.tables <- lapply(files, fread)
norm.table.temp <- do.call(merge, norm.tables)
files
norm.tables <- lapply(files, fread)
View(norm.tables)
?merge
station1 <- norm.tables[[1]]
class(station1)
station2 <- norm.tables[[2]]
station3 <- norm.tables[[3]]
station4 <- norm.tables[[4]]
dim(station1)
dim(station2)
dim(station3)
temp1<- merge(station1 station2)
temp1<- merge(station1, station2)
temp1<- merge(station1, station3)
temp1<- merge(station1, station4)
temp1<- merge(station1, station2, station3, station4)
dim(station1)
dim(station4)
temp1<- merge(station1, station4)
View(temp1)
temp1<- merge(station1, station2, station3)
dim(station1)
dim(station2)
dim(station3)
dim(station4)
temp1<- merge(station1, station2, station3)
temp1<- merge(station1, station2, station3, by = 1)
temp1<- merge(station1, station2, station3, by.x = 1)
temp1<- merge(station1, station2, station3, by.x = 1, by.y = 1)
View(station1)
temp1<- merge(station1, station2, station3, by = "V1")
temp1<- merge(station1, station2, station3, by.x = "V1", by.y = "V1")
View(temp1)
norm.tables <- lapply(files, fread, by.x = "V1", by.y = "V1")
norm.tables <- lapply(files, fread)
norm.table.temp <- do.call(merge, norm.tables, by.x = "V1", by.y = "V1")
?fread
norm.tables <- lapply(files, fread, data.table = FALSE)
station1 <- norm.tables[[1]]
class(station1)
class(station2)
norm.table.temp <- do.call(merge, norm.tables, by.x = "V1", by.y = "V1")
View(station1)
station2 <- norm.tables[[2]]
station3 <- norm.tables[[3]]
station4 <- norm.tables[[4]]
temp<-cbind(station1, station2, station3, station4)
View(temp)
merge(station1, station2, station3, station4)
merge(station1, station2, station3, station4, by = "V1")
merge(station1, station2, station3, station4, by = 1)
library(dplyr)
left_join(station1, station2, station3, station4, by = "V1")
norm.tables <- lapply(files, fread, data.table = FALSE)
norm.table.temp <- lapply(merge, norm.tables, by.x = "V1", by.y = "V1")
norm.tables <- lapply(files, fread, data.table = FALSE)
dim(norm.tables)
length(norm.tables)
rownames.norm.table <- rownames(norm.tables[[1]])
rownames.norm.table
rownames.norm.table <- norm.tables[[1]][, 1]
rownames.norm.table
norm.tables <- lapply(files, fread, data.table = FALSE)
rownames.norm.table <- norm.tables[[1]][, 1]
for (i in c(1:length(norm.tables))) {
norm.tables[[i]] <- norm.tables[[i]][, -1]
rownames(norm.tables[[i]]) <- rownames.norm.table
}
norm.table.temp <- lapply(merge, norm.tables, by = "row.names")
norm.table.temp <- do.call(merge, norm.tables, by = "row.names")
norm.table.temp <- do.call(merge, norm.tables)
norm.table.temp <- merge(norm.tables)
norm.tables[1]
norm.tables[,]
do.call(cbind, norm.tables)
temp <- do.call(cbind, norm.tables)
View(temp)
# heatmap
## collect all the files
files <- file.path(count.path, paste(groups, "_norm.csv", sep = ''))
norm.tables <- lapply(files, fread, data.table = FALSE)
rownames.norm.table <- norm.tables[[1]][, 1]
for (i in c(1:length(norm.tables))) {
norm.tables[[i]] <- norm.tables[[i]][, -1]
rownames(norm.tables[[i]]) <- rownames.norm.table
}
norm.table <- do.call(cbind, norm.tables)
# instead using all genes, only use the top 50 degs if there are more than 50
if (length(gene.id.deg) > 50) {
index.deg <- which(row.names(norm.table) %in% gene.id.deg[1:50])
} else {
index.deg <- which(row.names(norm.table) %in% gene.id.deg)
}
norm.table.deg <- norm.table[index.deg,]
gene.id.norm.table <- rownames(norm.table.deg)
gene.symbol.norm.table <- queryMany(gene.id.norm.table, scopes = 'ensembl.gene', fields = 'symbol')$symbol
# if can't find a symbol for the id, then keep the id as it is
gene.norm.table <- gene.symbol.norm.table
for (i in c(1:length(gene.norm.table))) {
if (is.na(gene.norm.table[i])) {
gene.norm.table[i] <- gene.id.norm.table[i]
}
}
# replace the rownames
rownames(norm.table.deg) <- gene.norm.table
palette <- brewer.pal(n = length(levels(group.all)), name = "Set1")
palette.group <- group.all
for (i in c(1:length(levels(palette.group)))) {
levels(palette.group)[levels(palette.group) == levels(palette.group)[i]] <- palette[i]
}
## draw heatmap
pdf(file = paste(output.path, '/heatmap.pdf', sep = ''), width = 15, height = 12, title = 'Heatmap using the top features')
q()
q()
q
q()
q()
setwd('/Users/xzh004/gitlab/codDefensome/rna-seq/scripts')
count <- read.table('../merge_dfsm_dea/gene_count_BPA_zf.txt', header = TRUE)
View(count)
count <- read.table('../merge_dfsm_dea/gene_count_BPA_zf.txt', header = TRUE, row.names = 1)
View(count)
?read.table
View(count)
count <- read.table('../merge_dfsm_dea/gene_count_BPA_zf.txt', header = TRUE, row.names = 'ensembl_gene_id')
count <- read.table('../merge_dfsm_dea/gene_count_BPA_zf.txt', header = TRUE, row.names = 'ensembl_gene_id')
count <- read.table('../merge_dfsm_dea/gene_count_BPA_zf.txt', header = TRUE, row.names = 'ensembl_gene_id')
View(count)
# norm count
count.norm <- count
for (i in seq(1,4)) {
sum.col <- sum(count[, i])
for (j in seq(1, nrow(count))) {
count.norm[j, i] <- count[j, i]/sum.col
}
}
View(count.norm)
1e3
10e3
# norm count
count.norm <- count
for (i in seq(1,4)) {
sum.col <- sum(count[, i])
for (j in seq(1, nrow(count))) {
count.norm[j, i] <- count[j, i]/sum.col * 1e6
}
}
write.table(count.norm, '../merge_dfsm_dea/gene_lib_norm_BPA_zf.tsv', sep = '\t', quote = FALSE)
q
q()
